@import url('https://fonts.googleapis.com/css2?family=Zen+Kaku+Gothic+New&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Noto+Serif+JP:wght@500&display=swap');

:root{
    --AnimationTime: 0.3s
}


html{
    background-color: var(--VoidColor);
}
body{
    font-family: var(--MainFont),Yu Gothic, Arial;
    margin: 0px;
    padding: 0px;
    background-color: var(--BackgroundColorSolid);
    color: var(--Color);
    background-repeat: no-repeat;
    background-image:
        linear-gradient(90deg, var(--BackgroundColorGradient) , transparent 20%, transparent 80%, var(--BackgroundColorGradient))
    ;
}
body::-webkit-scrollbar {
    width: 8px;
}
body::-webkit-scrollbar-track {
    background-color: var(--ScrollbarTrackColor);
}
body::-webkit-scrollbar-thumb {
    background-color: var(--ScrollbarThumbColor);
    /*border-radius: 100px;*/
}
body::-webkit-scrollbar-thumb:hover {
    background-color: var(--ScrollbarThumbHoverColor);
}

#BodyContent{
    /*margin: 60px 0px 0px 8px;*/
    /*padding: var(--HeaderHeight) 0px 0px 0px;*/
    margin-top: var(--HeaderHeight);
    min-height: calc(100vh - var(--HeaderHeight) - 94px);/*screenheight - HeaderHeight - footer*/
    /*width: 100vw;*/
}

h1{
    font-family: var(--HeadFont),Yu Gothic, Arial;
    font-weight: normal;
}
h2{
    font-family: var(--HeadFont),Yu Gothic, Arial;
    font-weight: normal;
}

footer{
    display: relative;
    margin-top: 24px;
    text-align: center;
    border-top: solid 2px var(--BorderColor);
    background-color: var(--BackgroundColor);
    box-shadow: 0px -8px 16px var(--VoidColor);
}
footer p{
    display: inline-block;
    vertical-align:middle;
    font-size: 20px;
}
button{
    border: 0px;
}

table {
    border-collapse: separate;
    border-spacing: 4px;
    text-align: left;
}
th{
    padding: 8px;
    background-color: var(--VoidColor);
}
td{
    padding: 8px;
    background-color: var(--BackgroundColor);
}

.corneredBorder {
    background-position:  0 0, 0 0, 100% 0, 0 100%;
    background-size: 1.5px 100%, 100% 1.5px, 1.5px 100% , 100% 1.5px;
    background-repeat: no-repeat;
    background-image:
        linear-gradient(0deg, var(--BorderColor), var(--BorderColor) 25%, transparent 25%, transparent 75%, var(--BorderColor) 75%),
        linear-gradient(90deg, var(--BorderColor), var(--BorderColor) 25%, transparent 25%, transparent 75%, var(--BorderColor) 75%),
        linear-gradient(180deg, var(--BorderColor), var(--BorderColor) 25%, transparent 25%, transparent 75%, var(--BorderColor) 75%),
        linear-gradient(270deg, var(--BorderColor), var(--BorderColor) 25%, transparent 25%, transparent 75%, var(--BorderColor) 75%)
    ;
}
.corneredBorderL {
    background-position:  0 0, 0 0, 100% 0, 0 100%;
    background-size: 1.5px 100%, 100% 1.5px, 1.5px 100% , 100% 1.5px;
    background-repeat: no-repeat;
    background-image:
        linear-gradient(0deg, var(--BorderColor), var(--BorderColor) 25%, transparent 25%, transparent 75%, var(--BorderColor) 75%),
        linear-gradient(90deg, var(--BorderColor), var(--BorderColor) 25%, transparent 25%),/*top*/
        linear-gradient(0deg, transparent, transparent),/*right*/
        linear-gradient(90deg, var(--BorderColor), var(--BorderColor) 25%, transparent 25%)/*bottom*/
    ;
}
.corneredBorderR {
    background-position:  0 0, 0 0, 100% 0, 0 100%;
    background-size: 1.5px 100%, 100% 1.5px, 1.5px 100% , 100% 1.5px;
    background-repeat: no-repeat;
    background-image:
        linear-gradient(0deg, transparent, transparent),
        linear-gradient(270deg, var(--BorderColor), var(--BorderColor) 25%, transparent 25%),/*top*/
        linear-gradient(180deg, var(--BorderColor), var(--BorderColor) 25%, transparent 25%, transparent 75%, var(--BorderColor) 75%),/*right*/
        linear-gradient(270deg, var(--BorderColor), var(--BorderColor) 25%, transparent 25%)/*bottom*/
    ;
}
.corneredBorderLTopRBottom {
    background-position:  0 0, 0 0, 100% 0, 0 100%;
    background-size: 1.5px 100%, 100% 1.5px, 1.5px 100% , 100% 1.5px;
    background-repeat: no-repeat;
    background-image:
        linear-gradient(180deg, var(--BorderColor), var(--BorderColor) 10%, transparent 15%),
        linear-gradient(90deg, var(--BorderColor), var(--BorderColor) 10%, transparent 15%),/*top*/
        linear-gradient(0deg, var(--BorderColor), var(--BorderColor) 10%, transparent 15%),/*right*/
        linear-gradient(270deg, var(--BorderColor), var(--BorderColor) 10%, transparent 15%)/*bottom*/
    ;
}

img{
    object-fit:cover;
    overflow: hidden;
}
/*UI用画像*/
.UIImg{
    position: absolute;
    filter: invert(var(--UIColorInvert));
}
.verticalInsideShadow{
    position: relative;
}
.verticalInsideShadow::after{
    content: '';
	position: absolute;
    top: 0;
	left: 0;
    width: 100%;
    height: calc(100% - 4px);/*なぜかずれる*/
    background-image: linear-gradient(0deg, var(--ShadowColor), transparent 8%, transparent 92%, var(--ShadowColor));
}
.worksPageTopImg{
    width: 100%;
    min-height: 180px;
    max-height: 260px;
    object-fit: cover;
}
.pageTopImg{
    width: 100%;
    height: 240px;
    object-fit: cover;
}

/*body内で結構使うであろうもの*/
.doubleGrid{
    display: grid;
    position:relative;
    grid-template-columns: 1fr 1fr;/*グリッドのサイズと分割*/

    gap: 16px;
    margin: 16px;
}
.singleGrid{
    display: grid;
    position:relative;
    grid-template-columns: 1fr;/*グリッドのサイズと分割*/

    gap: 16px;
    margin: 16px;
}
.centerGrid
{
    display: grid;
    position:relative;
    grid-template-columns: 1fr;/*グリッドのサイズと分割*/
    width: 90%;
    max-width: var(--CenterBlockMaxWidth);
    margin: auto;

    gap: 16px;
}
.gridBox1{
    grid-column: 1;/*何frからか*/
    max-width: 50vw;
}
.gridBox2{
    grid-column: 2;
    max-width: 50vw;
}
@media screen and (max-width:750px){
    .doubleGrid{
        grid-template-columns: 1fr;
    }
    .gridBox1{
        grid-column: 1;/*何frからか*/
        max-width: 95vw;
    }
    .gridBox2{
        grid-column: 1;
        max-width: 95vw;
    }
}


.centerBlock{
    display: block;
    /*width: 90%;
    max-width: var(--CenterBlockMaxWidth);
    margin: auto;
    margin-top: 24px;*/
    padding: 8px 16px 8px 16px;
    font-size: 15px;
    box-shadow: 6px 6px 20px var(--ShadowColor);
}
.center{
    text-align: center;
}
.left{
    text-align: left;
}
.right{
    text-align: right;
}
.pageTitle{
    position: absolute;
    top: 0%;
    width: calc(100% - 76px);
    padding: 0px 38px 4px 38px;
    margin-top: 52px;
    font-size: 48px;
    box-shadow: 0px 4px 24px var(--ShadowColor);
    background-color: var(--BackgroundColor);
}
.heading{
    max-width: 150px;
    border-bottom: solid 4px var(--BorderColor);
    z-index: 1;
    /*margin: auto;*/
    animation: extendwidth 2s 1 ease;
}
.heading2{
    /*border-bottom: solid 1px var(--BorderColor);*/
    height: 2px;
    background-repeat: no-repeat;
    background-image:
        linear-gradient(90deg, var(--BorderColor) 40%, transparent 90%)
    ;
    animation: extendwidth 5s 1 ease;
}
@keyframes extendwidth {
    0% {
        width: 0%;
    } 100% {
        width: 100%;
    }
  }

.fadeIn{
    animation: fadein 1.8s 1 ease;
}.fadeInFast{
    animation: fadein 1.25s 1 ease;
}
@keyframes fadein {
    0% {
        opacity: 0;
        transform: translateY(-50px);
    } 100% {
        opacity: 1;
        transform: translateY(0px);
    }
}

.hoverOpenImg{
    height: 64px;
    overflow: hidden;
    transition: height 0.3s 0s ease;
}
.hoverOpenImg:hover{
    height: 300px;
}
.OpenImgTop{
    object-fit:cover;
    position: relative;
    width: 100%;
}
.OpenImgCenter{
    object-fit:cover;
    position: relative;
    width: 100%;
    height: 100%;
}
.BigImg
{
    object-fit:cover;
    display: block;
    position: relative;
    /*height: 50%;*/
    width: 100%;
    max-width: 93vw;
}

/*クリックしたら画像変わる奴*/
/*
.ClickImageAndVideoChanger{
    
}
.ClickImageChanger{
    
}
*/
.ImageAndVideoChangeScreen{
    visibility: visible;
    opacity: 1;
    object-fit: contain;
    position: absolute;
    background-color: var(--PhotoBackgroundColor);
    height: 50vw;
    width: 100%;
    max-width: 93vw;
    transition: visibility 0.5s 0s ease;
    transition: opacity 0.5s 0s ease;
}
.ImageChangeScreen{
    object-fit:contain;
    /*height: 55vw;*/
    width: 90%;
    max-width: 93vw;
}
.ImageChangeButton{
    object-fit:contain;
    display: inline-block;
    border: solid 4px var(--BackgroundColor);
    background-color: var(--PhotoBackgroundColor);
    width: 20vw;
    height: 12vw;
    opacity: 1;
    transition: opacity 0.4s 0s ease;
    transition: border 0.2s 0s ease;
}
.ImageChangeButton.Selected{
    border: solid 4px var(--BorderColor);
}
.ImageChangeButton:hover{
    opacity: 0.5;
}
.ImageChangeVideoIcon{
    position: absolute;
    object-fit:contain;
    border: solid 4px #00000000;
    width: 20vw;
    height: 12vw;
    left: 0px;
    pointer-events: none;
}

/*video(Youtube)*/
.video {
    visibility: visible;
    position: relative;
    height: 0;
    padding: 30px 0 56.25%;
    margin: 16px;
    overflow: hidden;
    background-color: var(--PhotoBackgroundColor);
}
.video iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 1;
    transition: opacity 0.4s 0s ease;
}
.Unvisible
{
    opacity: 0;
    visibility: hidden;
    transition: visibility 0.5s 0s ease;
    transition: opacity 0.5s 0s ease;
}


/*スクロールするもん*/
.scrollView{
    width: 100%;
    /*overflow-y:auto;
    overflow-x:auto;*/
    overflow: auto;
    word-break: break-all;
    max-width: calc(100vw - 16px * 4);
    display: block;
}
.scrollView::-webkit-scrollbar {
    width: 8px;
}
.scrollView::-webkit-scrollbar-track {
    background-color: var(--ScrollbarTrackColor);
}
.scrollView::-webkit-scrollbar-thumb {
    background-color: var(--ScrollbarThumbColor);
    /*border-radius: 100px;*/
}
.scrollView::-webkit-scrollbar-thumb:hover {
    background-color: var(--ScrollbarThumbHoverColor);
}

/*DropDown関係*/
.Dropdown{
    display: table;
    position: relative;
}
.DropdownContent{
    position: relative;
    display: block;
    color: var(--DisableColor);
    background-color: #00000000;
    transition: all var(--AnimationTime) ease;
    /*transition: font-size var(--AnimationTime) ease;*/
}
.DropdownContent p{
    display: inline-block;
    vertical-align:middle;
    margin-left: 22px;
}
.DropdownContent:hover{
    background-color: var(--HoverButtonColor);
    color: var(--Color);
}
.Close .DropdownContent
{
    font-size: 0px;
    /*height: 0px;*/
}
.DropdownArrow{
    position: absolute;
    top: 17px;
    right: 20px;
    transform: rotate(0deg);
    transition: transform var(--AnimationTime) ease;
}
.Close .DropdownArrow{
    transform: rotate(90deg);
}

/*ロード画面まわり*/
#loading{
    position: fixed;
    width: 100%;
    height: 100%;
    z-index: 500;
    background-color: var(--BackgroundColorSolid);
    transition: all 0.75s ease;
}
#loading.loaded{
    opacity: 0;
    visibility: hidden;
}
#loadingRoter{
    position: fixed;
    top: 33.33%;
    left: 33.33%;
    width: 30%;
    z-index: 501;
    animation: yRotate 2.0s infinite linear;
}
#loadingText
{
    position: fixed;
    bottom: 30%;
    left: 33.33%;
    width: 30%;
    z-index: 501;
    text-align: center;
}
@keyframes yRotate {
    0% {
      transform: rotate3d(0,0,1,0deg);
    } 100% {
      transform: rotate3d(0,0,1,360deg);
    }
  }


